CREATE TABLE books (
book_id INTEGER NOT NULL,
book_title VARCHAR(40),
edition VARCHAR(40),
pub_name VARCHAR(40),
pub_date DATE,
availability BOOL,
num_of_copies INTEGER,
state VARCHAR(40),
catalog_number INTEGER,
row_number INTEGER,
active BOOL,
created_by VARCHAR(40),
update_by VARCHAR(40),
created VARCHAR(40),
updated VARCHAR(40),
CONSTRAINT PK_books PRIMARY KEY (book_id)
);

CREATE TABLE borrow_transaction (
borrow_transaction_id INTEGER NOT NULL,
librarian_id INTEGER NOT NULL,
book_id INTEGER NOT NULL,
member_id INTEGER NOT NULL,
borrowed_datetime TIMESTAMP,
returned_datetime TIMESTAMP,
borrowed_by VARCHAR(40),
returned_by VARCHAR(40),
date_due DATE,
is_returned BOOL,
created_by VARCHAR(40),
updated_by VARCHAR(40),
created VARCHAR(40),
updated VARCHAR(40),
CONSTRAINT PK_borrow_transaction PRIMARY KEY (borrow_transaction_id)
);


CREATE TABLE librarian (
librarian_id INTEGER NOT NULL,
name VARCHAR(40),
user_name VARCHAR(40),
password VARCHAR(40),
created_by VARCHAR(40),
updated_by VARCHAR(40),
created VARCHAR(40),
updated VARCHAR(40),
active BOOL,
inactive_reason VARCHAR(40),
CONSTRAINT PK_librarian PRIMARY KEY (librarian_id)
);


CREATE TABLE members (
member_id INTEGER NOT NULL,
external_id INTEGER,
member_type VARCHAR(40),
member_name VARCHAR(40),
phone_number INTEGER,
gender VARCHAR(40),
email VARCHAR(40),
active BOOL,
created_by VARCHAR(40),
updated_by VARCHAR(40),
created VARCHAR(40),
updated VARCHAR(40),
CONSTRAINT PK_members PRIMARY KEY (member_id)
);


CREATE TABLE membership (
librarian_id INTEGER NOT NULL,
member_id INTEGER NOT NULL,
registred_datetime TIMESTAMP,
registred_by VARCHAR(40),
membership_status BOOL,
membership_expiry_date DATE,
PRIMARY KEY (librarian_id, member_id)
);

CREATE TABLE fined_transactions (
fined_transaction_id INTEGER NOT NULL,
member_id INTEGER NOT NULL,
librarian_id INTEGER NOT NULL,
borrow_transaction_id INTEGER NOT NULL,
amount_added VARCHAR(40),
amount_received VARCHAR(40),
notes VARCHAR(40),
deleted VARCHAR(40),
created VARCHAR(40),
created_by VARCHAR(40),
CONSTRAINT PK_fined_transactions PRIMARY KEY (fined_transaction_id)
);

CREATE TABLE author (
author_id INTEGER NOT NULL,
first_name VARCHAR(40),
last_name VARCHAR(40),
PRIMARY KEY (author_id)
);

CREATE TABLE books_by_author (
author_id INTEGER NOT NULL,
book_id INTEGER NOT NULL,
PRIMARY KEY (author_id, book_id)
);

ALTER TABLE borrow_transaction ADD CONSTRAINT books_borrow_transaction
FOREIGN KEY (book_id) REFERENCES books (book_id);

ALTER TABLE borrow_transaction ADD CONSTRAINT librarian_borrow_transaction
FOREIGN KEY (librarian_id) REFERENCES librarian (librarian_id);

ALTER TABLE borrow_transaction ADD CONSTRAINT members_borrow_transaction
FOREIGN KEY (member_id) REFERENCES members (member_id);

ALTER TABLE membership ADD CONSTRAINT librarian_membership
FOREIGN KEY (librarian_id) REFERENCES librarian (librarian_id);

ALTER TABLE membership ADD CONSTRAINT members_membership
FOREIGN KEY (member_id) REFERENCES members (member_id);

ALTER TABLE fined_transactions ADD CONSTRAINT librarian_fined_transactions
FOREIGN KEY (librarian_id) REFERENCES librarian (librarian_id);

ALTER TABLE fined_transactions ADD CONSTRAINT
borrow_transaction_fined_transactions
FOREIGN KEY (borrow_transaction_id) REFERENCES borrow_transaction
(borrow_transaction_id);

ALTER TABLE fined_transactions ADD CONSTRAINT members_fined_transactions
FOREIGN KEY (member_id) REFERENCES members (member_id);


ALTER TABLE books_by_author ADD CONSTRAINT books_id_author
FOREIGN KEY (book_id) REFERENCES books (book_id);

ALTER TABLE books_by_author ADD CONSTRAINT books_author_id
FOREIGN KEY (author_id) REFERENCES author (author_id);


INSERT INTO author (author_id, first_name, last_name) VALUES (2006, 'edoh', 'sanda');
INSERT INTO books (book_id, book_title, edition, availability, num_of_copies,
state, catalog_number, row_number, active, created_by, update_by, created, updated)
VALUES (1, 'COD', '2nd', TRUE, 10, 'excellent', 3, 5, TRUE, 'saira', 'saira', '2010-10-12 12:10:03',
'2010-10-12 12:10:03');
INSERT INTO books_by_author (author_id, book_id) VALUES (2006, 1);

INSERT INTO categories (category_id, category_name) VALUES (1746, 'Computing');
INSERT INTO fined_transactions (fined_transaction_id, member_id, librarian_id,
borrow_transaction_id, amount_added, amount_received, notes, deleted, created,
created_by) VALUES (1, 4, 2, 1, '0', '0', 'no fine', '2011-02-06', '2011-02-02 10:03:01', 'saira');

UPDATE books SET book_title = 'MCIP’ WHERE book_id= 3;
DELETE from books WHERE book_title =’NE’;
